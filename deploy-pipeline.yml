version: 0.2

phases:
  install:
    commands:
      # Install kubectl following https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/
      - echo Installing Kubectl...
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
      - echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
      - chmod +x kubectl
      - mkdir -p ~/.local/bin
      - mv ./kubectl ~/.local/bin/kubectl
      - echo 'export PATH=$PATH:$HOME/bin'
      - kubectl version --client
      - curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
      - sudo mv /tmp/eksctl /usr/local/bin
      
  pre_build:
    commands:
      - ASSUME_ROLE_ARN=${EKS_ROLE}
      - TEMP_ROLE=$(aws sts assume-role --role-arn $ASSUME_ROLE_ARN --role-session-name deploy_eks)
      - export TEMP_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')
      - aws eks --region us-east-2 update-kubeconfig --name ${EKS_CLUSTER_NAME}
      
      
  build:
    commands:
      - echo Deploy started on `date`
      - envsubst < deployment.yml | kubectl apply -f -
      - kubectl get pods
